!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/albert/git_repos/AlbertDM_github/C_examples/ModernC/Initialization/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
%.o	Makefile	/^%.o: %.c$/;"	t
%_$(STD)	Makefile	/^%_$(STD): %_$(STD).o$/;"	t
%_$(STD).o	Makefile	/^%_$(STD).o: %.c$/;"	t
ARR_LEN	example1.c	/^#define ARR_LEN /;"	d	file:
C23_STYLE	example_TCP_IP_MQTT.c	/^#define C23_STYLE /;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -std=$(STD) -Wall -Wextra -pedantic$/;"	m
DOOR_ELECTRIC	example1.c	/^    DOOR_ELECTRIC,$/;"	e	enum:main::__anonc0c7f7130103	file:
DOOR_MANUAL	example1.c	/^    DOOR_MANUAL,$/;"	e	enum:main::__anonc0c7f7130103	file:
ETHERTYPE_IPV4	example_TCP_IP_MQTT.c	/^#define ETHERTYPE_IPV4 /;"	d	file:
ETHERTYPE_IPV6	example_TCP_IP_MQTT.c	/^#define ETHERTYPE_IPV6 /;"	d	file:
EXE_FILES	Makefile	/^EXE_FILES = $(SRC_FILES:%.c=%_$(STD))$/;"	m
MAX_DOORS	example1.c	/^#define MAX_DOORS /;"	d	file:
MAX_ETHERNET_FRAME	example_TCP_IP_MQTT.c	/^#define MAX_ETHERNET_FRAME /;"	d	file:
MAX_MQTT_PACKET	example_TCP_IP_MQTT.c	/^#define MAX_MQTT_PACKET /;"	d	file:
MAX_PAYLOAD_DATA	example_TCP_IP_MQTT.c	/^#define MAX_PAYLOAD_DATA /;"	d	file:
MAX_WHEELS	example1.c	/^#define MAX_WHEELS /;"	d	file:
MIN_ETHERNET_FRAME	example_TCP_IP_MQTT.c	/^#define MIN_ETHERNET_FRAME /;"	d	file:
OBJ_FILES	Makefile	/^OBJ_FILES = $(SRC_FILES:%.c=%_$(STD).o)$/;"	m
SRC_FILES	Makefile	/^SRC_FILES = example1.c example_TCP_IP_MQTT.c$/;"	m
STD	Makefile	/^STD ?= c99$/;"	m
TRANSMISSION_AUTOMATIC	example1.c	/^    TRANSMISSION_AUTOMATIC,$/;"	e	enum:main::__anonc0c7f7130203	file:
TRANSMISSION_MANUAL	example1.c	/^    TRANSMISSION_MANUAL,$/;"	e	enum:main::__anonc0c7f7130203	file:
USE_C23_INIT	example1.c	/^#define USE_C23_INIT /;"	d	file:
WHEEL_TYPE_ALLOY	example1.c	/^    WHEEL_TYPE_ALLOY,$/;"	e	enum:main::__anonc0c7f7130303	file:
WHEEL_TYPE_STEEL	example1.c	/^    WHEEL_TYPE_STEEL,$/;"	e	enum:main::__anonc0c7f7130303	file:
__anon9a1fdca50108	example_TCP_IP_MQTT.c	/^typedef struct {$/;"	s	file:
__anon9a1fdca50208	example_TCP_IP_MQTT.c	/^typedef struct {$/;"	s	file:
__anon9a1fdca50308	example_TCP_IP_MQTT.c	/^typedef struct {$/;"	s	file:
__anon9a1fdca50408	example_TCP_IP_MQTT.c	/^typedef struct {  $/;"	s	file:
__anon9a1fdca50508	example_TCP_IP_MQTT.c	/^typedef struct {  $/;"	s	file:
__anon9a1fdca50608	example_TCP_IP_MQTT.c	/^typedef struct {  $/;"	s	file:
__anon9a1fdca50708	example_TCP_IP_MQTT.c	/^typedef struct {$/;"	s	file:
__anonc0c7f7130103	example1.c	/^  typedef enum {$/;"	g	function:main	file:
__anonc0c7f7130203	example1.c	/^  typedef enum {$/;"	g	function:main	file:
__anonc0c7f7130303	example1.c	/^  typedef enum {$/;"	g	function:main	file:
__anonc0c7f7130408	example1.c	/^  typedef struct {$/;"	s	function:main	file:
__anonc0c7f7130508	example1.c	/^  typedef struct {$/;"	s	function:main	file:
__anonc0c7f7130608	example1.c	/^  typedef struct {$/;"	s	function:main	file:
ack_num	example_TCP_IP_MQTT.c	/^  unsigned int ack_num;           \/\/ Acknowledgment number$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned int	file:
all	Makefile	/^all: $(EXE_FILES)$/;"	t
app_header	example_TCP_IP_MQTT.c	/^  app_header_t app_header;$/;"	m	struct:__anon9a1fdca50708	typeref:typename:app_header_t	file:
app_header_t	example_TCP_IP_MQTT.c	/^} app_header_t;$/;"	t	typeref:struct:__anon9a1fdca50208	file:
brand	example1.c	/^    char brand[20];         \/\/ Brand of the wheel$/;"	m	struct:main::__anonc0c7f7130408	typeref:typename:char[20]	file:
car_t	example1.c	/^  } car_t;$/;"	t	function:main	typeref:struct:main::__anonc0c7f7130608	file:
checksum	example_TCP_IP_MQTT.c	/^  unsigned short checksum;        \/\/ Checksum$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned short	file:
clean	Makefile	/^clean:$/;"	t
cleanall	Makefile	/^cleanall: clean$/;"	t
color	example1.c	/^    int color;              \/\/ Hex value$/;"	m	struct:main::__anonc0c7f7130508	typeref:typename:int	file:
control_field	example_TCP_IP_MQTT.c	/^  control_field_t control_field;      \/\/ Control field struct$/;"	m	struct:__anon9a1fdca50208	typeref:typename:control_field_t	file:
control_field_t	example_TCP_IP_MQTT.c	/^} control_field_t;$/;"	t	typeref:struct:__anon9a1fdca50108	file:
crc	example_TCP_IP_MQTT.c	/^  unsigned int crc;   \/\/ Cyclic Redundancy Check (CRC) for error detection$/;"	m	struct:__anon9a1fdca50608	typeref:typename:unsigned int	file:
cwr	example_TCP_IP_MQTT.c	/^  unsigned char cwr : 1;          \/\/ CWR (Congestion Window Reduced) flag$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:1	file:
data_offset	example_TCP_IP_MQTT.c	/^  unsigned char data_offset : 4;  \/\/ Data offset in 4-byte words$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:4	file:
doorVariant_t	example1.c	/^  } doorVariant_t;$/;"	t	function:main	typeref:enum:main::__anonc0c7f7130103	file:
door_t	example1.c	/^  } door_t;$/;"	t	function:main	typeref:struct:main::__anonc0c7f7130508	file:
doors	example1.c	/^    door_t doors[MAX_DOORS];        \/\/ Array of 4 doors$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:door_t[]	file:
drivingWheel	example1.c	/^    char drivingWheel;      \/\/ Left or Right (e.g., 'L', 'R')$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:char	file:
dst_addr	example_TCP_IP_MQTT.c	/^  unsigned int dst_addr;            \/\/ Destination IP address$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned int	file:
dst_mac	example_TCP_IP_MQTT.c	/^  unsigned char dst_mac[6];   \/\/ Destination MAC address$/;"	m	struct:__anon9a1fdca50508	typeref:typename:unsigned char[6]	file:
dst_port	example_TCP_IP_MQTT.c	/^  unsigned short dst_port;        \/\/ Destination port number$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned short	file:
ece	example_TCP_IP_MQTT.c	/^  unsigned char ece : 1;          \/\/ ECE (Echo) flag$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:1	file:
ethernet_header_t	example_TCP_IP_MQTT.c	/^} ethernet_header_t;$/;"	t	typeref:struct:__anon9a1fdca50508	file:
ethernet_trailer_t	example_TCP_IP_MQTT.c	/^} ethernet_trailer_t;$/;"	t	typeref:struct:__anon9a1fdca50608	file:
ethertype	example_TCP_IP_MQTT.c	/^  unsigned short ethertype;   \/\/ EtherType (e.g., 0x0800 for IPv4)$/;"	m	struct:__anon9a1fdca50508	typeref:typename:unsigned short	file:
example1	Makefile	/^example1: example1_$(STD).o$/;"	t
example_TCP_IP_MQTT	Makefile	/^example_TCP_IP_MQTT: example_TCP_IP_MQTT_$(STD).o$/;"	t
flags	example_TCP_IP_MQTT.c	/^  unsigned char flags : 4;        \/\/ Flags$/;"	m	struct:__anon9a1fdca50108	typeref:typename:unsigned char:4	file:
flags_and_offset	example_TCP_IP_MQTT.c	/^  unsigned short flags_and_offset;  \/\/ Flags and fragment offset$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned short	file:
frontrear	example1.c	/^    int frontrear : 2;      \/\/ Front: 0b10  Rear: 0b01$/;"	m	struct:main::__anonc0c7f7130508	typeref:typename:int:2	file:
hasClutch	example1.c	/^    bool hasClutch;         \/\/ `True` for manual, `False` for automatic$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:bool	file:
header_checksum	example_TCP_IP_MQTT.c	/^  unsigned short header_checksum;   \/\/ Checksum of the header$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned short	file:
identification	example_TCP_IP_MQTT.c	/^  unsigned short identification;    \/\/ Unique ID for the datagram$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned short	file:
ihl	example_TCP_IP_MQTT.c	/^  unsigned char ihl : 4;            \/\/ Internet Header Length (in 4-byte words)$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned char:4	file:
initTcpHeader_C23	example_TCP_IP_MQTT.c	/^void initTcpHeader_C23 (tcp_header_t *tcp) {$/;"	f	typeref:typename:void
ip_header	example_TCP_IP_MQTT.c	/^  ip_header_t ip_header;$/;"	m	struct:__anon9a1fdca50708	typeref:typename:ip_header_t	file:
ip_header_t	example_TCP_IP_MQTT.c	/^} ip_header_t;$/;"	t	typeref:struct:__anon9a1fdca50408	file:
leftright	example1.c	/^    int leftright : 2;      \/\/ Left: 0b10   Right: 0b01$/;"	m	struct:main::__anonc0c7f7130508	typeref:typename:int:2	file:
main	example1.c	/^int main() {$/;"	f	typeref:typename:int
main	example_TCP_IP_MQTT.c	/^int main() {$/;"	f	typeref:typename:int
mileage	example1.c	/^    double mileage;         \/\/ Mileage in kilometers$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:double	file:
model_name	example1.c	/^    char model_name[40];           \/\/ Model of the car$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:char[40]	file:
ns	example_TCP_IP_MQTT.c	/^  unsigned char ns : 1;           \/\/ NS (Nonce Sum) flag$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:1	file:
options	example_TCP_IP_MQTT.c	/^  unsigned char options : 3;      \/\/ Reserved bits$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:3	file:
packet_type	example_TCP_IP_MQTT.c	/^  unsigned char packet_type : 4;  \/\/ Packet type$/;"	m	struct:__anon9a1fdca50108	typeref:typename:unsigned char:4	file:
padding	example_TCP_IP_MQTT.c	/^  unsigned char padding : 1;      \/\/ NS (Nonce Sum) flag$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:1	file:
payload	example_TCP_IP_MQTT.c	/^  unsigned char payload[];$/;"	m	struct:__anon9a1fdca50708	typeref:typename:unsigned char[]	file:
printMembersAppHeader	example_TCP_IP_MQTT.c	/^void printMembersAppHeader(app_header_t app) {$/;"	f	typeref:typename:void
printMembersEthernetHeader	example_TCP_IP_MQTT.c	/^void printMembersEthernetHeader(ethernet_header_t eth) {$/;"	f	typeref:typename:void
printMembersIpHeader	example_TCP_IP_MQTT.c	/^void printMembersIpHeader(ip_header_t ip) {$/;"	f	typeref:typename:void
printMembersTcpHeader	example_TCP_IP_MQTT.c	/^void printMembersTcpHeader(tcp_header_t tcp) {$/;"	f	typeref:typename:void
protocol	example_TCP_IP_MQTT.c	/^  unsigned char protocol;           \/\/ Protocol (e.g., TCP, UDP)$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned char	file:
protocol_message_t	example_TCP_IP_MQTT.c	/^} protocol_message_t;$/;"	t	typeref:struct:__anon9a1fdca50708	file:
remaining_length	example_TCP_IP_MQTT.c	/^  unsigned char remaining_length[4];  \/\/ Variable length depending on packet size$/;"	m	struct:__anon9a1fdca50208	typeref:typename:unsigned char[4]	file:
reserved1	example_TCP_IP_MQTT.c	/^  unsigned char reserved1 : 3;    \/\/ Reserved bits$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:3	file:
seq_num	example_TCP_IP_MQTT.c	/^  unsigned int seq_num;           \/\/ Sequence number$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned int	file:
size	example1.c	/^    int size;               \/\/ Diameter of the wheel in inches$/;"	m	struct:main::__anonc0c7f7130408	typeref:typename:int	file:
src_addr	example_TCP_IP_MQTT.c	/^  unsigned int src_addr;            \/\/ Source IP address$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned int	file:
src_mac	example_TCP_IP_MQTT.c	/^  unsigned char src_mac[6];   \/\/ Source MAC address$/;"	m	struct:__anon9a1fdca50508	typeref:typename:unsigned char[6]	file:
src_port	example_TCP_IP_MQTT.c	/^  unsigned short src_port;        \/\/ Source port number$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned short	file:
tcp_header	example_TCP_IP_MQTT.c	/^  tcp_header_t tcp_header;$/;"	m	struct:__anon9a1fdca50708	typeref:typename:tcp_header_t	file:
tcp_header_t	example_TCP_IP_MQTT.c	/^} tcp_header_t;$/;"	t	typeref:struct:__anon9a1fdca50308	file:
time_to_live	example_TCP_IP_MQTT.c	/^  unsigned char time_to_live;       \/\/ Time to live$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned char	file:
total_length	example_TCP_IP_MQTT.c	/^  unsigned short total_length;      \/\/ Total length of the IP datagram$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned short	file:
transmission	example1.c	/^    transmissionVariant_t transmission; \/\/ Transmission type$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:transmissionVariant_t	file:
transmissionVariant_t	example1.c	/^  } transmissionVariant_t;$/;"	t	function:main	typeref:enum:main::__anonc0c7f7130203	file:
trunk	example1.c	/^    int trunk : 1;$/;"	m	struct:main::__anonc0c7f7130508	typeref:typename:int:1	file:
type_of_service	example_TCP_IP_MQTT.c	/^  unsigned char type_of_service;    \/\/ Type of service$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned char	file:
urg	example_TCP_IP_MQTT.c	/^  unsigned char urg : 1;          \/\/ URG (Urgent) flag$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned char:1	file:
urgent_ptr	example_TCP_IP_MQTT.c	/^  unsigned short urgent_ptr;      \/\/ Urgent pointer$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned short	file:
variant	example1.c	/^    doorVariant_t variant;$/;"	m	struct:main::__anonc0c7f7130508	typeref:typename:doorVariant_t	file:
variant	example1.c	/^    wheelVariant_t variant; \/\/ Variant of the wheel$/;"	m	struct:main::__anonc0c7f7130408	typeref:typename:wheelVariant_t	file:
version	example_TCP_IP_MQTT.c	/^  unsigned char version : 4;        \/\/ IP version$/;"	m	struct:__anon9a1fdca50408	typeref:typename:unsigned char:4	file:
wheelVariant_t	example1.c	/^  } wheelVariant_t;$/;"	t	function:main	typeref:enum:main::__anonc0c7f7130303	file:
wheel_t	example1.c	/^  } wheel_t;$/;"	t	function:main	typeref:struct:main::__anonc0c7f7130408	file:
wheels	example1.c	/^    wheel_t wheels[MAX_WHEELS];      \/\/ Array of 4 wheels$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:wheel_t[]	file:
window	example_TCP_IP_MQTT.c	/^  unsigned short window;          \/\/ Window size$/;"	m	struct:__anon9a1fdca50308	typeref:typename:unsigned short	file:
year	example1.c	/^    int year;               \/\/ Year of manufacture$/;"	m	struct:main::__anonc0c7f7130608	typeref:typename:int	file:
